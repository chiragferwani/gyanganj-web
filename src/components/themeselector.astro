---
import { Icon } from "astro-icon/components";

const {
	themeMapping = { system: "System", dark: "Dark", light: "Light" },
	...rest
} = Astro.props;
---

<div
	class="flex items-center pl-2 py-1 rounded-md text-sm font-semibold text-center transition focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 border outline-2 outline-offset-2 dark:active:bg-stone-950"
	aria-label="Theme selection">
	<Icon name="fluent:dark-theme-20-filled" class="w-5 dark:text-white" />
	<label for="theme-selector" class="sr-only">Choose a theme</label>
	<select
		x-data="{
				theme: localStorage.theme || 'system',
				updateDocumentClassTheme: function() {
					if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
						document.documentElement.classList.add('dark');
					} else {
						document.documentElement.classList.remove('dark');
					}
				},
				switchTheme: function (newValue) {
					if (newValue == 'dark') {
						localStorage.theme = 'dark';
					} else if (newValue == 'light') {
						localStorage.theme = 'light';
					} else {
						localStorage.removeItem('theme');
					}
					this.updateDocumentClassTheme();
				},
			}"
		class="appearance-none bg-transparent cursor-pointer pl-3 pr-2 py-2 text-gray-700 dark:text-white focus-visible:outline-none 
			dark:bg-black dark:border-gray-600 dark:hover:border-gray-400"
		x-model="theme"
		aria-label="Choose a theme"
		@change="switchTheme($event.target.value)">
		<option value="system" class="bg-white text-gray-900 dark:bg-gray-800 dark:text-white">System</option>
		<option value="dark" class="bg-white text-gray-900 dark:bg-gray-800 dark:text-white">Dark</option>
		<option value="light" class="bg-white text-gray-900 dark:bg-gray-800 dark:text-white">Light</option>
	</select>
</div>
